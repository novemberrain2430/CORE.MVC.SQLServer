@page
@using Microsoft.Extensions.Localization
@using System.Collections.Generic
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal
@using Volo.Saas.Host.Pages.Saas.Host.Tenants
@using Volo.Saas.Localization
@model ConnectionStringsModal
@inject IStringLocalizer<SaasResource> L
@{
    Layout = null;
}

<form method="post" asp-page="/Saas/Host/Tenants/ConnectionStringsModal">
    <abp-modal size="Large">
        <abp-modal-header title="@L["ConnectionStrings"]"></abp-modal-header>
        <abp-modal-body>
            <abp-input asp-for="ConnectionStrings.Id"/>

            <abp-input asp-for="ConnectionStrings.UseSharedDatabase"/>

            <div id="Tenant_ConnectionStrings_Wrap" class="@(Model.ConnectionStrings.UseSharedDatabase ? "d-none" : "")">

                <abp-input asp-for="ConnectionStrings.Default"/>

                @if (!Model.ConnectionStrings.Databases.IsNullOrEmpty())
                {
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <abp-select asp-for="DatabaseName" asp-items="@Model.DatabaseSelectListItems"></abp-select>
                        </div>
                        <div class="form-group col-md-7">
                            <abp-input asp-for="ConnectionString"/>
                        </div>
                        <div class="form-group col-md-2 mt-4">
                            <button id="AddDatabaseConnectionString" type="button" class="btn btn-primary">@L["AddDatabaseConnectionString"]</button>
                        </div>
                    </div>

                    <div class="form-row">
                        <table class="table">
                            <thead>
                            <tr>
                                <th>@L["DisplayName:DatabaseName"]</th>
                                <th>@L["DisplayName:ConnectionString"]</th>
                                <th>@L["Actions"]</th>
                            </tr>
                            </thead>
                            <tbody id="ConnectionStringsTBody">
                            @{
                                var connectionString = Model.ConnectionStrings.Databases.Where(x => !x.ConnectionString.IsNullOrWhiteSpace()).ToList();
                                for (var index = 0; index < connectionString.Count; index++)
                                {
                                    var database = connectionString[index];
                                    <tr>
                                        <td>
                                            @database.DatabaseName
                                            <input type="hidden" abp-id-name="@Model.ConnectionStrings.Databases[index].DatabaseName" value="@database.DatabaseName"/>
                                        </td>
                                        <td>
                                            @database.ConnectionString
                                            <input type="hidden" abp-id-name="@Model.ConnectionStrings.Databases[index].ConnectionString" value="@database.ConnectionString"/>
                                        </td>
                                        <td><button type="button" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button></td>
                                    </tr>
                                }
                            }
                            </tbody>
                        </table>
                    </div>
                }

            </div>

        </abp-modal-body>
        <abp-modal-footer buttons="@(AbpModalButtons.Cancel|AbpModalButtons.Save)"></abp-modal-footer>
    </abp-modal>
</form>
